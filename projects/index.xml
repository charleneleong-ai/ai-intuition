<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>AI Intuition</title>
<link>https://www.ai-intuition.com/projects/</link>
<atom:link href="https://www.ai-intuition.com/projects/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.4.554</generator>
<lastBuildDate>Mon, 13 May 2024 00:00:00 GMT</lastBuildDate>
<item>
  <title>ROS Navigation and Control for a Triangular Holonomic Robot</title>
  <dc:creator>Charlene Leong</dc:creator>
  <link>https://www.ai-intuition.com/projects/posts/bigT_ros_control/</link>
  <description><![CDATA[ 





<p><a href="https://github.com/charleneleong-ai/big_T_ROS_navigation">Open in Github</a></p>
<p>This post describes the control node implementation for a three-wheeled omni-wheeled holonomic robot to update motor direction and speed from incoming linear and angular velocities.</p>
<section id="build" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Build</h1>
<p>Big T is an autonomous three-wheeled omni-wheel holonomic robot with SLAM capabilities.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="./big_T.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://www.ai-intuition.com/projects/posts/bigT_ros_control/big_T.png" class="quarto-figure quarto-figure-center figure-img" height="300"></a></p>
</figure>
</div>
<p>Big T is mounted with both exterioceptive sensors such as a mouse sensor, LIDAR and Intel RealSense and proprioceptive sensors such as IMU and encoders to capture odometry signals to inform the control algorithm.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="./blockdiagram.png" class="lightbox" data-gallery="quarto-lightbox-gallery-2"><img src="https://www.ai-intuition.com/projects/posts/bigT_ros_control/blockdiagram.png" class="quarto-figure quarto-figure-center figure-img" height="300"></a></p>
</figure>
</div>
</section>
<section id="mapping-modes" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Mapping Modes</h1>
<p>There are two main mapping modes we can operate in with Big T.</p>
<ol type="1">
<li>The map of the environment is first created using Hector SLAM to simulataneously localise and map the environment and save the map. See <a href="http://wiki.ros.org/hector_slam">here</a> for reference. Hector SLAM is used in conjunction with an <a href="https://automaticaddison.com/extended-kalman-filter-ekf-with-python-code-example/">extended Kalman filter (EKF)</a> to fuse wheel odometry with the IMU to create an improved odometry estimate using the <a href="http://wiki.ros.org/robot_pose_ekf"><code>robot_pose_ekf</code></a> package. This example below shows the robot performing autonomous SLAM to map the environment.</li>
</ol>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="./feature.gif" class="lightbox" data-gallery="quarto-lightbox-gallery-3"><img src="https://www.ai-intuition.com/projects/posts/bigT_ros_control/feature.gif" class="quarto-figure quarto-figure-center figure-img" height="300"></a></p>
</figure>
</div>
<ol start="2" type="1">
<li>We can test localising the robot inside the saved map using AMCL (Adaptive Monte Carlo localisation) which estimates 2D position based on particle filter. The robot’s pose is represented as a distribution of particles, where each particle represents a possible pose of the robot. It takes as input a map, LIDAR scans, and transform messages, and outputs an estimated pose. See <a href="http://wiki.ros.org/amcl">here</a> for reference.</li>
</ol>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="./AMCL_EKF_localisation.gif" class="lightbox" data-gallery="quarto-lightbox-gallery-4"><img src="https://www.ai-intuition.com/projects/posts/bigT_ros_control/AMCL_EKF_localisation.gif" class="quarto-figure quarto-figure-center figure-img" height="300"></a></p>
</figure>
</div>
</section>
<section id="architecture" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Architecture</h1>
<p>Big T can be run into two operative modes, high level block digrams are shown below:</p>
<ol type="1">
<li>Autonomous Mode - this mode is often used for SLAM navigation.</li>
</ol>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="./big_t_autonomous.png" class="lightbox" data-gallery="quarto-lightbox-gallery-5"><img src="https://www.ai-intuition.com/projects/posts/bigT_ros_control/big_t_autonomous.png" class="quarto-figure quarto-figure-center figure-img" height="500"></a></p>
</figure>
</div>
<ol start="2" type="1">
<li>Tele-operative Mode - this mode is often used for user-controlled navigation in a saved map and also for debugging purposes.</li>
</ol>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="./big_t_teleop.png" class="lightbox" data-gallery="quarto-lightbox-gallery-6"><img src="https://www.ai-intuition.com/projects/posts/bigT_ros_control/big_t_teleop.png" class="quarto-figure quarto-figure-center figure-img" height="500"></a></p>
</figure>
</div>
</section>
<section id="control-algorithm" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Control Algorithm</h1>
<p>The robot’s velocity commands are published on the <code>cmd_vel</code> topic from either the<code>teleop_twist_keyboard</code> node in <code>teleop</code> mode or <code>move_base</code> node in the ROS navigation stack when in SLAM node. The control node aims to translate directions in the global frame to the individual directions to each motor in three-wheeled omnidirectional robot configuration.</p>
<section id="imports-and-global-variables" class="level2" data-number="4.1">
<h2 data-number="4.1" class="anchored" data-anchor-id="imports-and-global-variables"><span class="header-section-number">4.1</span> Imports and Global Variables</h2>
<p>We first import our initial <code>C++</code> <code>ROS</code> headers and instantiate our global variables from the robot’s physical characteristics.</p>
<p>We include the following headers:</p>
<ul>
<li>[<code>ros/ros.h</code>] to include too headers necessary to use the most common public pieces of the ROS system.</li>
<li><a href="http://docs.ros.org/en/kinetic/api/geometry_msgs/html/msg/Twist.html"><code>geometry_msgs/Twist.h</code></a> to publish linear and angular velocities to facilitate interoperability throughout the system.</li>
<li><a href="http://docs.ros.org/en/kinetic/api/geometry_msgs/html/msg/Quaternion.html"><code>geometry_msgs/Quaternion.h</code></a> to publish orientation in quarternion form.</li>
<li><a href="http://docs.ros.org/en/kinetic/api/sensor_msgs/html/msg/Imu.html"><code>sensor_msgs/Imu.h</code></a> to collect sensor data message type from the IMU. The IMU node <a href="http://wiki.ros.org/razor_imu_9do"><code>razor_imu_9dof</code></a> publishes messages to the <code>"imu"</code> topic in the ROS system to be used by motion and planning algorithms such as this <a href="http://wiki.ros.org/robot_pose_ekf"><code>robot_pose_ekf</code></a>.</li>
<li><a href="https://cplusplus.com/reference/cmath/"><code>math.h</code></a> to perform common mathmetical operations and transformations.</li>
</ul>
<p>We then declare our ROS publishers <code>motor_control_pub</code> to publish the motor control signal to the wheels and <code>imu_pub</code> to publish and update the robot’s orientation.</p>
<div data-add-from="control.cpp" data-start-line="1" data-end-line="18" data-code-line-numbers="true">
<div class="sourceCode cell-code" id="cb1" data-startfrom="1" style="background: #f1f3f5;"><pre class="sourceCode numberSource cpp number-lines code-with-copy"><code class="sourceCode cpp"><span id="cb1-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">"ros/ros.h"</span></span>
<span id="cb1-2"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">"geometry_msgs/Twist.h"</span></span>
<span id="cb1-3"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">"geometry_msgs/Quaternion.h"</span></span>
<span id="cb1-4"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">"sensor_msgs/Imu.h"</span></span>
<span id="cb1-5"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;math.h&gt;</span></span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> omega1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> omega2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> omega3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// angular velocities</span></span>
<span id="cb1-8"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0525</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Wheel radius (105mm/2)</span></span>
<span id="cb1-9"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.18</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Distance from the center of the body to the wheel (180mm)</span></span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> v_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Global translation speed in x (m/s)</span></span>
<span id="cb1-12"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> v_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Global translation speed in y (m/s)</span></span>
<span id="cb1-13"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> omega_body <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Rotational speed of the body (rad/s)</span></span>
<span id="cb1-14"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> theta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.1415</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Orientation of the body (rad)</span></span>
<span id="cb1-15"></span>
<span id="cb1-16">ros<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>Publisher motor_control_pub<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-17">ros<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>Publisher imu_pub<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-18"></span></code></pre></div>
</div>
</section>
<section id="main-loop" class="level2" data-number="4.2">
<h2 data-number="4.2" class="anchored" data-anchor-id="main-loop"><span class="header-section-number">4.2</span> Main Loop</h2>
<p>We first set up the appropriate ROS publishers and subscribers, to enable ROS signal communication between incoming sensor and output motor nodes in the ROS ecosystem.</p>
<p>The <code>main</code> loop is as follows:</p>
<ol type="1">
<li>Initialises the ROS system with the node name <code>triangle_control</code>.</li>
<li>Creates <code>ros::NodeHandle</code> to interface with the ROS system.</li>
<li>Sets up publisher <code>pub</code> to publish motor control data on the <code>motor_control_data</code> topic.</li>
<li>Sets up <code>imu_sub</code> to receive IMU data on <code>imu</code> topic to process with <code>imu_callback</code> function. This allows us to explicitly publish the IMU orientation to an <code>orientation</code> topic.</li>
<li>Sets up <code>imu_pub</code> to receive velocity cmmmands on the <code>cmd_vel</code> topic and process with the <code>cmd_vel_callback</code> function. The <code>cmd_vel</code> topic is typically used to publish velocity commands published by the <code>teleop_twist_keyboard</code> node in <code>teleop</code> mode or <code>move_base</code> node in the ROS navigation stack when in SLAM node.</li>
<li>Enters infinite event loop with <code>ros::spin()</code> to continuously process incoming messages on all topics to which the node is subscribed (eg. <code>imu</code> and <code>cmd_vel</code>), call the appropriate callback functions (eg. <code>imu_callback</code> and <code>cmd_vel_callback</code>) and publish messages to the advertised topics (eg. <code>motor_control_data</code> and <code>orientation</code>). It blocks the main thread and ensures the <code>triangle_control</code> node runs for as long as the ROS system is active.</li>
</ol>
<div data-add-from="control.cpp" data-start-line="71" data-end-line="89" data-code-line-numbers="true">
<div class="sourceCode cell-code" id="cb2" data-startfrom="71" style="background: #f1f3f5;"><pre class="sourceCode numberSource cpp number-lines code-with-copy"><code class="sourceCode cpp" style="counter-reset: source-line 70;"><span id="cb2-71"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> main<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> argc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>argv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb2-72"></span>
<span id="cb2-73">	ros<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>init<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>argc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> argv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"triangle_control"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb2-74"></span>
<span id="cb2-75">	ros<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>NodeHandle n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-76"></span>
<span id="cb2-77">	motor_control_pub <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>advertise<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>geometry_msgs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>Twist<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"motor_control_data"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb2-78"></span>
<span id="cb2-79">	ros<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>Subscriber imu_sub <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>subscribe<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"imu"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> imu_callback<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb2-80"></span>
<span id="cb2-81">	imu_pub <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>advertise<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>geometry_msgs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>Quaternion<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"orientation"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb2-82"></span>
<span id="cb2-83">	ros<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>Subscriber sub <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>subscribe<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cmd_vel"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> cmd_vel_callback<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb2-84"></span>
<span id="cb2-85">	ros<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>spin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb2-86"></span>
<span id="cb2-87">	<span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-88"></span>
<span id="cb2-89"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
</section>
<section id="converting-sensor-input-to-angular-velocities" class="level2" data-number="4.3">
<h2 data-number="4.3" class="anchored" data-anchor-id="converting-sensor-input-to-angular-velocities"><span class="header-section-number">4.3</span> Converting Sensor Input to Angular Velocities</h2>
<p>The main callback function that updates the robot’s direction is <code>cmd_vel_callback</code> which is subscribed to the <code>cmd_vel</code> topic of a data type of <code>geometry_msgs::Twist</code> which expresses velocity in it’s angular and linear parts. This function translates the desired linear and angular velocities of the robot into individual wheel speeds, converts those speeds to PWM signals, and determines the direction for each wheel. It then publishes these control signals to the <code>motor_control_pub</code> topic to update the robot direction .</p>
<div data-add-from="control.cpp" data-start-line="40" data-end-line="68" data-code-line-numbers="true">
<div class="sourceCode cell-code" id="cb3" data-startfrom="40" style="background: #f1f3f5;"><pre class="sourceCode numberSource cpp number-lines code-with-copy"><code class="sourceCode cpp" style="counter-reset: source-line 39;"><span id="cb3-40"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> cmd_vel_callback<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> geometry_msgs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>Twist <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> msg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb3-41">	<span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*</span></span>
<span id="cb3-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">		omega1	...	rotation speed of motor 1	(in rad/s)</span></span>
<span id="cb3-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">		omega2	...	rotation speed of motor 2	(in rad/s)</span></span>
<span id="cb3-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">		omega3	...	rotation speed of motor 3	(in rad/s)</span></span>
<span id="cb3-45"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">	*/</span></span>
<span id="cb3-46">	ROS_INFO<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Msg received"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb3-47"></span>
<span id="cb3-48">	geometry_msgs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>Twist out_msg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-49">	v_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> msg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>linear<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-50">	v_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> msg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>linear<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-51">	omega_body <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> msg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>angular<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>z<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-52"></span>
<span id="cb3-53">	omega1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>v_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> cosf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>theta<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> v_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> sinf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>theta<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> omega_body <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb3-54">	omega2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>cosf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>theta<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> v_y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>  sinf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>theta<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> v_x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>  sqrt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> sinf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>theta<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> v_y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>  sqrt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> cosf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>theta<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> v_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> omega_body <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb3-55">	omega3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(-</span>sqrt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> sinf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>theta<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> v_y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> cosf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>theta<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> v_y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>  sqrt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> cosf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>theta<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> v_x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> sinf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>theta<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> v_x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> omega_body <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb3-56"></span>
<span id="cb3-57">	<span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// pwm signal</span></span>
<span id="cb3-58">	out_msg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>linear<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> omega2pwm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>omega1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// convert from rad/s to pwm signal</span></span>
<span id="cb3-59">	out_msg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>linear<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> omega2pwm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>omega2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb3-60">	out_msg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>linear<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> omega2pwm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>omega3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb3-61"></span>
<span id="cb3-62">	<span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// motor direction</span></span>
<span id="cb3-63">	out_msg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>angular<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sign<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>omega1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// set direction bit depending on the rotation speed</span></span>
<span id="cb3-64">	out_msg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>angular<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sign<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>omega2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb3-65">	out_msg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>angular<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sign<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>omega3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb3-66"></span>
<span id="cb3-67">	motor_control_pub<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>publish<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>out_msg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb3-68"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<p>See the following sections below for more details.</p>
</section>
<section id="deriving-the-kinematic-equations-for-a-three-wheeled-omnidirectional-robot" class="level2" data-number="4.4">
<h2 data-number="4.4" class="anchored" data-anchor-id="deriving-the-kinematic-equations-for-a-three-wheeled-omnidirectional-robot"><span class="header-section-number">4.4</span> Deriving the Kinematic Equations for a Three-Wheeled Omnidirectional Robot</h2>
<p><strong>Assumptions and Setup</strong></p>
<ol type="1">
<li><strong>Robot Configuration:</strong>
<ul>
<li>The robot is a triangle with three holonomic wheels.</li>
<li>The wheels are positioned 120 degrees apart from each other.</li>
</ul></li>
<li><strong>Variables:</strong>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?v_x">: Linear velocity in the x-direction (global frame).</li>
<li><img src="https://latex.codecogs.com/png.latex?v_y">: Linear velocity in the y-direction (global frame).</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Comega_%5Ctext%7Bbody%7D">: Rotational velocity of the robot around its center.</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Ctheta">: Orientation of the robot (angle between the robot’s frame and the global frame).</li>
<li><img src="https://latex.codecogs.com/png.latex?r">: Radius of each wheel.</li>
<li><img src="https://latex.codecogs.com/png.latex?h">: Distance from the center of the robot to each wheel.</li>
</ul></li>
</ol>
<p><strong>Diagram</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="./kinematics.png" class="lightbox" data-gallery="quarto-lightbox-gallery-7"><img src="https://www.ai-intuition.com/projects/posts/bigT_ros_control/kinematics.png" class="quarto-figure quarto-figure-center figure-img" height="500"></a></p>
</figure>
</div>
<p><strong>Derivation</strong></p>
<p>We aim to derive the angular velocities of the three holonomic wheels <img src="https://latex.codecogs.com/png.latex?%5Comega_1">, <img src="https://latex.codecogs.com/png.latex?%5Comega_2">, <img src="https://latex.codecogs.com/png.latex?%5Comega_3"> based on the robot’s linear velocities (<img src="https://latex.codecogs.com/png.latex?v_x">, <img src="https://latex.codecogs.com/png.latex?v_y">) and rotational velocity (<img src="https://latex.codecogs.com/png.latex?%5Comega_%7B%5Ctext%7Bbody%7D%7D">) in the global frame, considering the robot’s orientation <img src="https://latex.codecogs.com/png.latex?%5Ctheta">.</p>
<p><strong>1. Transform Global Velocities to Local Velocities</strong></p>
<p>First, we need to transform The global velocities <img src="https://latex.codecogs.com/png.latex?v_x"> and <img src="https://latex.codecogs.com/png.latex?v_y"> into the local frame of the robot using its orientation <img src="https://latex.codecogs.com/png.latex?%5Ctheta">:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Av_%7Bx,%5Ctext%7Blocal%7D%7D%20=%20v_x%20%5Ccos(%5Ctheta)%20+%20v_y%20%5Csin(%5Ctheta)%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0Av_%7By,%5Ctext%7Blocal%7D%7D%20=%20-v_x%20%5Csin(%5Ctheta)%20+%20v_y%20%5Ccos(%5Ctheta)%0A"></p>
<p><strong>2. Express Local Velocities and Rotational Velocity in Terms of Wheel Velocities</strong></p>
<p>Each wheel contributes to the robot’s motion. The linear velocities of the wheels can be decomposed into components that affect the overall motion of the robot.</p>
<p>For a wheel positioned at an angle <img src="https://latex.codecogs.com/png.latex?%5Calpha"> with respect to the robot’s frame: <img src="https://latex.codecogs.com/png.latex?%0A%5Comega_%7B%5Ctext%7Bwheel%7D%7D%20=%20%5Cfrac%7B1%7D%7Br%7D%20(v_%7Bx,%5Ctext%7Blocal%7D%7D%20%5Ccos(%5Calpha)%20+%20v_%7By,%5Ctext%7Blocal%7D%7D%20%5Csin(%5Calpha)%20+%20%5Comega_%7B%5Ctext%7Bbody%7D%7D%20h)%0A"></p>
<p>Where <img src="https://latex.codecogs.com/png.latex?%5Comega_%5Ctext%7Bwheel%7D"> is the angular velocity of the wheel, and <img src="https://latex.codecogs.com/png.latex?h"> is the distance from the center to the wheel.</p>
<p><strong>3. Apply to Each Wheel</strong></p>
<p>Each wheel is positioned <img src="https://latex.codecogs.com/png.latex?120%5E%5Ccirc"> apart, so the angles <img src="https://latex.codecogs.com/png.latex?%5Calpha"> for the three wheels are <img src="https://latex.codecogs.com/png.latex?0%5E%5Ccirc">, <img src="https://latex.codecogs.com/png.latex?120%5E%5Ccirc">, and <img src="https://latex.codecogs.com/png.latex?240%5E%5Ccirc">.</p>
<p><strong>For Wheel 1 where <img src="https://latex.codecogs.com/png.latex?%5Calpha%20=%200%5E%5Ccirc">:</strong></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Comega_1%20=%20%5Cfrac%7B1%7D%7Br%7D%20(%20v_%7Bx,%5Ctext%7Blocal%7D%7D%20%5Ccos(0)%20+%20v_%7By,%5Ctext%7Blocal%7D%7D%20%5Csin(0)%20+%20%5Comega_%7B%5Ctext%7Bbody%7D%7D%20h%20)%0A"></p>
<p>Since <img src="https://latex.codecogs.com/png.latex?cos(0%5E%5Ccirc)=%201"> and <img src="https://latex.codecogs.com/png.latex?%5Csin(0%5E%5Ccirc)%20=%200">:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Comega_1%20=%20%5Cfrac%7B1%7D%7Br%7D%20(%20v_%7Bx,%5Ctext%7Blocal%7D%7D%20+%20%5Comega_%7B%5Ctext%7Bbody%7D%7D%20h%20)%0A"></p>
<p>Substituting the local velocities:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Comega_1%20=%20%5Cfrac%7B1%7D%7Br%7D%20(%20v_x%20%5Ccos(%5Ctheta)%20+%20v_y%20%5Csin(%5Ctheta)%20+%20%5Comega_%7B%5Ctext%7Bbody%7D%7D%20h%20)%0A"></p>
<p><strong>For Wheel 2 where <img src="https://latex.codecogs.com/png.latex?%5Calpha%20=%20120%5E%5Ccirc">:</strong></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Comega_2%20=%20%5Cfrac%7B1%7D%7Br%7D%20(%20v_%7Bx,%5Ctext%7Blocal%7D%7D%20%5Ccos(120%5E%5Ccirc)%20+%20v_%7By,%5Ctext%7Blocal%7D%7D%20%5Csin(120%5E%5Ccirc)%20+%20%5Comega_%7B%5Ctext%7Bbody%7D%7D%20h)%0A"></p>
<p>Since <img src="https://latex.codecogs.com/png.latex?%5Ccos(120%5E%5Ccirc)%20=%20-%5Cfrac%7B1%7D%7B2%7D"> and <img src="https://latex.codecogs.com/png.latex?%5Csin(120%5E%5Ccirc)%20=%20%5Cfrac%7B%5Csqrt%7B3%7D%7D%7B2%7D">:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Comega_2%20=%20%5Cfrac%7B1%7D%7Br%7D%20(%20v_%7Bx,%5Ctext%7Blocal%7D%7D(%20-%5Cfrac%7B1%7D%7B2%7D%20)%20+%20v_%7By,%5Ctext%7Blocal%7D%7D%20(%20%5Cfrac%7B%5Csqrt%7B3%7D%7D%7B2%7D%20)%20+%20%5Comega_%7B%5Ctext%7Bbody%7D%7D%20h)%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Comega_2%20=%20%5Cfrac%7B1%7D%7Br%7D%20(%20(v_x%20%5Ccos(%5Ctheta)%20+%20v_y%20%5Csin(%5Ctheta))%20(%20-%5Cfrac%7B1%7D%7B2%7D%20)%20+%20(-v_x%20%5Csin(%5Ctheta)%20+%20v_y%20%5Ccos(%5Ctheta))%20(%20%5Cfrac%7B%5Csqrt%7B3%7D%7D%7B2%7D%20)%20+%20%5Comega_%7B%5Ctext%7Bbody%7D%7D%20h%20)%0A"></p>
<p>Expanding and simplifying:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Comega_2%20=%20%5Cfrac%7B1%7D%7Br%7D%20(%20-%5Cfrac%7B1%7D%7B2%7D%20v_x%20%5Ccos(%5Ctheta)%20-%20%5Cfrac%7B1%7D%7B2%7D%20v_y%20%5Csin(%5Ctheta)%20+%20%5Cfrac%7B%5Csqrt%7B3%7D%7D%7B2%7D%20(-v_x%20%5Csin(%5Ctheta))%20+%20%5Cfrac%7B%5Csqrt%7B3%7D%7D%7B2%7D%20v_y%20%5Ccos(%5Ctheta)%20+%20%5Comega_%7B%5Ctext%7Bbody%7D%7D%20h%20)%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Comega_2%20=%20%5Cfrac%7B1%7D%7Br%7D%20(%20-%5Cfrac%7B1%7D%7B2%7D%20v_x%20%5Ccos(%5Ctheta)%20-%20%5Cfrac%7B1%7D%7B2%7D%20v_y%20%5Csin(%5Ctheta)%20-%20%5Cfrac%7B%5Csqrt%7B3%7D%7D%7B2%7D%20v_x%20%5Csin(%5Ctheta)%20+%20%5Cfrac%7B%5Csqrt%7B3%7D%7D%7B2%7D%20v_y%20%5Ccos(%5Ctheta)%20+%20%5Comega_%7B%5Ctext%7Bbody%7D%7D%20h%20)%0A"></p>
<p>Combining terms and simplifying further:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Comega_2%20=%20%5Cfrac%7B1%7D%7Br%7D%20(%20%5Cfrac%7B%5Ccos(%5Ctheta)%20v_y%7D%7B3%7D%20-%20%5Cfrac%7B%5Csin(%5Ctheta)%20v_x%7D%7B3%7D%20+%20%5Cfrac%7B%5Csqrt%7B3%7D%20%5Csin(%5Ctheta)%20v_y%7D%7B3%7D%20+%20%5Cfrac%7B%5Csqrt%7B3%7D%20%5Ccos(%5Ctheta)%20v_x%7D%7B3%7D%20%20+%20%5Comega_%7B%5Ctext%7Bbody%7D%7D%20h%20)%0A"></p>
<p><strong>For Wheel 3 where <img src="https://latex.codecogs.com/png.latex?%5Calpha%20=%20240%5E%5Ccirc">:</strong></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Comega_3%20=%20%5Cfrac%7B1%7D%7Br%7D%20(%20v_%7Bx,%5Ctext%7Blocal%7D%7D%20%5Ccos(240%5E%5Ccirc)%20+%20v_%7By,%5Ctext%7Blocal%7D%7D%20%5Csin(240%5E%5Ccirc)%20+%20%5Comega_%7B%5Ctext%7Bbody%7D%7D%20h%20)%0A"></p>
<p>Since <img src="https://latex.codecogs.com/png.latex?%5Ccos(240%5E%5Ccirc)%20=%20-%5Cfrac%7B1%7D%7B2%7D"> and <img src="https://latex.codecogs.com/png.latex?%5Csin(240%5E%5Ccirc)%20=%20-%5Cfrac%7B%5Csqrt%7B3%7D%7D%7B2%7D">:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Comega_3%20=%20%5Cfrac%7B1%7D%7Br%7D%20(%20(v_x%20%5Ccos(%5Ctheta)%20+%20v_y%20%5Csin(%5Ctheta))%20(%20-%5Cfrac%7B1%7D%7B2%7D%20)%20+%20(-v_x%20%5Csin(%5Ctheta)%20+%20v_y%20%5Ccos(%5Ctheta))%20(%20-%5Cfrac%7B%5Csqrt%7B3%7D%7D%7B2%7D%20)%20+%20%5Comega_%7B%5Ctext%7Bbody%7D%7D%20h%20)%0A"></p>
<p>Expanding and simplifying:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Comega_3%20=%20%5Cfrac%7B1%7D%7Br%7D%20(%20-%5Cfrac%7B1%7D%7B2%7D%20v_x%20%5Ccos(%5Ctheta)%20-%20%5Cfrac%7B1%7D%7B2%7D%20v_y%20%5Csin(%5Ctheta)%20-%20%5Cfrac%7B%5Csqrt%7B3%7D%7D%7B2%7D%20(-v_x%20%5Csin(%5Ctheta))%20-%20%5Cfrac%7B%5Csqrt%7B3%7D%7D%7B2%7D%20v_y%20%5Ccos(%5Ctheta)%20+%20%5Comega_%7B%5Ctext%7Bbody%7D%7D%20h%20)%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Comega_3%20=%20%5Cfrac%7B1%7D%7Br%7D%20(%20-%5Cfrac%7B1%7D%7B2%7D%20v_x%20%5Ccos(%5Ctheta)%20-%20%5Cfrac%7B1%7D%7B2%7D%20v_y%20%5Csin(%5Ctheta)%20+%20%5Cfrac%7B%5Csqrt%7B3%7D%7D%7B2%7D%20v_x%20%5Csin(%5Ctheta)%20-%20%5Cfrac%7B%5Csqrt%7B3%7D%7D%7B2%7D%20v_y%20%5Ccos(%5Ctheta)%20+%20%5Comega_%7B%5Ctext%7Bbody%7D%7D%20h%20)%0A"></p>
<p>Combining terms and simplifying further:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Comega_3%20=%20%5Cfrac%7B1%7D%7Br%7D%20(%20-%5Cfrac%7B%5Csqrt%7B3%7D%20%5Csin(%5Ctheta)%20v_y%7D%7B3%7D%20+%20%5Cfrac%7B%5Ccos(%5Ctheta)%20v_y%7D%7B3%7D%20-%20%5Cfrac%7B%5Csqrt%7B3%7D%20%5Ccos(%5Ctheta)%20v_x%7D%7B3%7D%20-%20%5Cfrac%7B%5Csin(%5Ctheta)%20v_x%7D%7B3%7D%20+%20%5Comega_%7B%5Ctext%7Bbody%7D%7D%20h%20)%0A"></p>
<p><strong>Final Equations</strong></p>
<p>The final simplified equations for the angular velocities of the wheels are:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Comega_1%20=%20%5Cfrac%7B1%7D%7Br%7D%20(%20v_x%20%5Ccos(%5Ctheta)%20+%20v_y%20%5Csin(%5Ctheta)%20+%20%5Comega_%7B%5Ctext%7Bbody%7D%7D%20h%20)%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Comega_2%20=%20%5Cfrac%7B1%7D%7Br%7D%20(%20%5Cfrac%7B%5Ccos(%5Ctheta)%20v_y%7D%7B3%7D%20-%20%5Cfrac%7B%5Csin(%5Ctheta)%20v_x%7D%7B3%7D%20+%20%5Cfrac%7B%5Csqrt%7B3%7D%20%5Csin(%5Ctheta)%20v_y%7D%7B3%7D%20+%20%5Cfrac%7B%5Csqrt%7B3%7D%20%5Ccos(%5Ctheta)%20v_x%7D%7B3%7D%20%20+%20%5Comega_%7B%5Ctext%7Bbody%7D%7D%20h%20)%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Comega_3%20=%20%5Cfrac%7B1%7D%7Br%7D%20(%20-%5Cfrac%7B%5Csqrt%7B3%7D%20%5Csin(%5Ctheta)%20v_y%7D%7B3%7D%20+%20%5Cfrac%7B%5Ccos(%5Ctheta)%20v_y%7D%7B3%7D%20-%20%5Cfrac%7B%5Csqrt%7B3%7D%20%5Ccos(%5Ctheta)%20v_x%7D%7B3%7D%20-%20%5Cfrac%7B%5Csin(%5Ctheta)%20v_x%7D%7B3%7D%20+%20%5Comega_%7B%5Ctext%7Bbody%7D%7D%20h%20)%0A"></p>
<p>These equations relate the global motion commands (<img src="https://latex.codecogs.com/png.latex?v_x">, <img src="https://latex.codecogs.com/png.latex?v_y">, <img src="https://latex.codecogs.com/png.latex?%5Comega_%7B%5Ctext%7Bbody%7D%7D">) to the angular velocities of the three wheels (<img src="https://latex.codecogs.com/png.latex?%5Comega_1">, <img src="https://latex.codecogs.com/png.latex?%5Comega_2">, <img src="https://latex.codecogs.com/png.latex?%5Comega_3">) taking into account the robot’s orientation <img src="https://latex.codecogs.com/png.latex?%5Ctheta">, wheel radius <img src="https://latex.codecogs.com/png.latex?r"> and distance from center to the wheels <img src="https://latex.codecogs.com/png.latex?h">.</p>
</section>
<section id="converting-angular-velocities-to-pwm-signal-for-motor-control" class="level2" data-number="4.5">
<h2 data-number="4.5" class="anchored" data-anchor-id="converting-angular-velocities-to-pwm-signal-for-motor-control"><span class="header-section-number">4.5</span> Converting angular velocities to PWM signal for motor control</h2>
<p>After we’ve calculated the angular velocities in terms on radians per second (<img src="https://latex.codecogs.com/png.latex?rad/s">), we have to convert to a Pulse Width Modulation (PWM) signal to send updated speed and direction to the motors.</p>
<p><strong>1. Angular Velocity to RPM</strong></p>
<p>We first convert angular velocity (<img src="https://latex.codecogs.com/png.latex?rad/s">) to revolutions per minute (RPM).</p>
<p>We know that <img src="https://latex.codecogs.com/png.latex?1%20%5Cspace%20revolution=2%5Cpi%20%5Cspace%20radians"> and <img src="https://latex.codecogs.com/png.latex?1%20%5Cspace%20minute%20=%2060%20%5Cspace%20seconds">, therefore, the conversion factor is:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0ARPM%20=%20%5Comega%5Ctimes(60/2%5Cpi)%20%5Capprox%20%5Comega%5Ctimes%209.5493%20%5Capprox%20%5Comega%5Ctimes%209.55%0A"></p>
<p><strong>2. Conversion from RPM to PWM</strong></p>
<p>In order to measure and calibrate the relationship betwen PWM and RPM for the motor, an empirical experiment was performed in order to collect measurements and fit a linear regression model to the data.</p>
<p>For series of PWM signals from a low duty cycle to (eg. 10%) to high duty cycle (eg. 90%) generated using an oscilloscope, the respective RPM for the motor was recorded using a tachometer.</p>
<p>The resulting linear relationship is:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0APWM%20=%20a%20%5Ctimes%20RPM%20+%20b%20%20=%202.4307%20%5Ctimes%20RPM%20+%2036.2178%0A"></p>
<p>This means that for every unit increase in RPM, the PWM value increases by approximately 2.4307 units, and when the RPM is zero, the PWM value starts at approximately 36.2178.</p>
<p><strong>3. Handling Very Small Angular Velocities</strong></p>
<p>Small angular velocities <code>&lt;=0.05</code> are ignored, to smooth noise in the signal and avoid unnecessary motor activation.</p>
<div data-add-from="control.cpp" data-start-line="26" data-end-line="26" data-code-line-numbers="true">
<div class="sourceCode cell-code" id="cb4" data-startfrom="26" style="background: #f1f3f5;"><pre class="sourceCode numberSource cpp number-lines code-with-copy"><code class="sourceCode cpp" style="counter-reset: source-line 25;"><span id="cb4-26">	<span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>fabs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>omega<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
</div>
<p><strong>4. Linear Equation of Angular velocity to PWM</strong></p>
<p>Through substituting and simplifying the equations above, we can derive the following linear relationship for converting angular velocity to PWM.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0APWM%20=%202.4307%20%5Ctimes%20RPM%20+%2036.2178%20=%20%202.43%20%5Ctimes%20(%5Comega%5Ctimes%209.55)%20+%2036.22%0A"></p>
<p>The result is then returned as an integer PWM value which can be used to control motor speed. We later apply this to each wheel when we calculate the new angular velocities from sensor feedback. We make <img src="https://latex.codecogs.com/png.latex?%5Comega"> absolute <img src="https://latex.codecogs.com/png.latex?%7C%5Comega_%7B%5Ctext%7Bwheel%7D%7D%7C"> in order to ensure the angular velocity is never non-negative.</p>
<div data-add-from="control.cpp" data-start-line="20" data-end-line="29" data-code-line-numbers="true">
<div class="sourceCode cell-code" id="cb5" data-startfrom="20" style="background: #f1f3f5;"><pre class="sourceCode numberSource cpp number-lines code-with-copy"><code class="sourceCode cpp" style="counter-reset: source-line 19;"><span id="cb5-20"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>	omega2pwm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> omega<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-21">	<span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*</span></span>
<span id="cb5-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">		omega ... angular velocity ( in rad/s )</span></span>
<span id="cb5-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">		rpm = omega*9.5493; // conversion from rad/s to rpm	 ( 1/(2*pi)*60 = 9.5493 )</span></span>
<span id="cb5-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">		pwm = 2.4307*rpm + 36.2178; // conversion of rpm to pwm values</span></span>
<span id="cb5-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">	*/</span></span>
<span id="cb5-26">	<span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>fabs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>omega<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-27"></span>
<span id="cb5-28">	<span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.43</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*(</span>fabs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>omega<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">9.55</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">36.22</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-29"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<p><strong>5. Setting Direction Bit of Motor</strong></p>
<p>The direction bit of the motor is set based on the sign of the angular velocity <img src="https://latex.codecogs.com/png.latex?%5Comega_%7B%5Ctext%7Bwheel%7D%7D">.</p>
<div data-add-from="control.cpp" data-start-line="31" data-end-line="33" data-code-line-numbers="true">
<div class="sourceCode cell-code" id="cb6" data-startfrom="31" style="background: #f1f3f5;"><pre class="sourceCode numberSource cpp number-lines code-with-copy"><code class="sourceCode cpp" style="counter-reset: source-line 30;"><span id="cb6-31"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> sign<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> number<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb6-32">	<span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>number<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-33"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<hr>
<p>This project was executed as part of the course - ECEN430: Advanced Mechatronic Engineering 2: Intelligence and Design at Victoria University of Wellington 2018.</p>


</section>
</section>

<script async="" defer="" src="https://scripts.simpleanalyticscdn.com/latest.js"></script><script defer="" src="https://cloud.umami.is/script.js" data-website-id="07090575-f991-48f7-91da-2346a7d041ff"></script> ]]></description>
  <category>robotics</category>
  <category>control</category>
  <category>navigation</category>
  <category>ros</category>
  <guid>https://www.ai-intuition.com/projects/posts/bigT_ros_control/</guid>
  <pubDate>Mon, 13 May 2024 00:00:00 GMT</pubDate>
</item>
</channel>
</rss>

---
title: "Crane+ V2 Motion Planning Optimisation"
date: "2024-05-13"
categories: [robotics, control, motion planning, ros, optimisation]
description: "Blackbox Optimisation for Motion Planning Algorithms"
# bibliography: references.bib
---

[Open in Github](https://github.com/charleneleong-ai/crane_plus_v2_motion_planning)


![](./feature.gif){fig-align="center" height="300" .lightbox}


This post describes the experiment setup for testing  blackbox optimisation algorithms to motion planning algorithms in the `Crane+V2` 4DOF robotic arm.

## Build

[Crane+V2](https://www.rt-net.jp/products/cranep2?lang=en) is a 4DOF arm + gripper from [RT-Net](https://rt-net.jp/products/cranev2/). This project explores the application of blackbox optimisation techniques to optimise hyperparameters in motion planning algorithms in robotic arms. The control state is implemented in [ROS](http://wiki.ros.org/) with motion planning integration with the [MoveIt! Motion Planning Framework](http://moveit.ros.org/) and simulation with [Gazebo](https://gazebosim.org/home).


![](./crane_plus_moveit.png){fig-align="center" height="300" .lightbox}



## Package Setup

In order to setup the ROS environment for the `Crane+V2` arm, the following packages were implemented to aid in setting up the experimentation environment. Please refer to the repo [here](https://github.com/charleneleong-ai/crane_plus_v2_motion_planning) for more details on how to things up, even though this is no longer maintained!

**crane_plus_control:** Parameter tuning and benchmarking nodes

**crane_plus_description:** [CAD files](https://github.com/charleneleong-ai/crane_plus_description/README.md) and [URDF](http://wiki.ros.org/urdf) (Unified Robot Description Format) model of CRANE+V2

**crane_plus_gripper:** Node that controls the gripper of CRANE+V2

**crane_plus_hardware:** Launch file that configures the settings for use with CRANE+V2 hardware

**crane_plus_ikfast_arm_plugin:** Custom inverse kinematics plugin for CRANE+V2 in the MoveIt! framework

**crane_plus_joint_state_publisher:** Node that converts servo status messages ([`dynamixel_msgs/JointState`](http://docs.ros.org/kinetic/api/dynamixel_msgs/html/msg/JointState.html) message type) output by the Dynamixel servo controller to ROS [`sensor_msgs/JointState`](http://docs.ros.org/melodic/api/sensor_msgs/html/msg/JointState.html) message type

**crane_plus_moveit_config:** Parameters and launch files for using CRANE+V2 with MoveIt! framework

**crane_plus_simulation:** Launch file that configures the settings for simulating CRANE+V2 in Gazebo
motion planning


## Experiment Setup

...

WIP! Will add details soon!

...


------


This project was part of an internship with the Machine Learning research group at Mitsubishi Electric R&D Department in Kanagawa, Japan 2019. This research was to help to optimise the performance of Mitsubishi Electric's industrial robotic arm productss.

![](./mitsubishi.png){fig-align="center" height="300" .lightbox}
